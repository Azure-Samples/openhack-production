// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.101.1/containers/dotnetcore-3.1
{
	"name": "api",
	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.csharp"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5000, 5001],

	// [Optional] To reuse of your local HTTPS dev cert, first export it locally using this command: 
	//  * Windows PowerShell:
	//     dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere" 
	//  * macOS/Linux terminal:
	//     dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//
	// Next, after running the command above, uncomment lines in the 'mounts' and 'remoteEnv' lines below, 
	// and open / rebuild the container so the settings take effect.
	//
	"mounts": [
		// "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind"
	],
	"remoteEnv": {
		"ASPNETCORE_Kestrel__Endpoints__Http__Url": "http://*:5000",
		"ASPNETCORE_Kestrel__Endpoints__Https__Url": "https://*:5001",			
		"ASPNETCORE_ENVIRONMENT": "Development"
	}

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "dotnet restore",

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}

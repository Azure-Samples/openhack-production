{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appInsightsName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The name of the application insights resource"
            }
        },
        "frontDoorName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The name of the frontdoor resource"
            }
        },
        "frontDoorEndpoint": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The endpoint of the frontdoor resource"
            }
        },
        "frontendHosts": {
            "defaultValue": [
            ],
            "type": "array",
            "metadata": {
                "description": "The list of hostnames of the frontend. Must be an IP address or FQDN"
            }
        },
        "backendHosts": {
            "defaultValue": [
            ],
            "type": "array",
            "metadata": {
                "description": "The list of hostnames of the backend. Must be an IP address or FQDN"
            }
        },
        "cosmosdbAccountName": {
            "type": "string",
            "metadata": {
                "description": "Cosmos DB account name, max length 44 characters"
            }
        },
        "cosmosdbRegions": {
            "defaultValue": [
            ],
            "type": "array",
            "metadata": {
                "description": "The list of replica regions for the Cosmos DB account"
            }
        },
        "cosmosdbConsistencyLevel": {
            "type": "string",
            "defaultValue": "Session",
            "allowedValues": [
                "Eventual",
                "ConsistentPrefix",
                "Session",
                "BoundedStaleness",
                "Strong"
            ],
            "metadata": {
                "description": "The default consistency level of the Cosmos DB account"
            }
        },
        "cosmosdbThroughput": {
            "type": "int",
            "defaultValue": 400,
            "metadata": {
                "description": "The throughput for the Cosmos DB container with dedicated throughput"
            }
        }
    },
    "variables": {
        "cosmosDatabaseName": "linkylinkdb",
        "cosmosContainerName": "linkbundles"
    },
    "resources": [
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('appInsightsName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest"
            }
        },
        {
            "type": "Microsoft.Network/frontdoors",
            "apiVersion": "2019-05-01",
            "name": "[parameters('frontDoorName')]",
            "location": "global",
            "properties": {
                "enabledState": "Enabled",
                "routingRules": [
                    {
                        "name": "Frontend",
                        "properties": {
                            "enabledState": "Enabled",
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), 'publicEndpoint')]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), 'Frontend')]"
                                }
                            }
                        }
                    },
                    {
                        "name": "Backend",
                        "properties": {
                            "enabledState": "Enabled",
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontdoors/frontendEndpoints', parameters('frontDoorName'), 'publicEndpoint')]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/api/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "HttpsOnly",
                                "customForwardingPath": "/",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), 'Backend')]"
                                }
                            }
                        }
                    },
                    {
                        "name": "HttpRedirect",
                        "properties": {
                            "enabledState": "Enabled",
                            "frontendEndpoints": [
                                {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), 'publicEndpoint')]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                                "redirectType": "Moved",
                                "redirectProtocol": "HttpsOnly"
                            }
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "frontendLoadBalancerSettings",
                        "properties": {
                            "additionalLatencyMilliseconds": 0,
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2
                        }
                    },
                    {
                        "name": "backendLoadBalancerSettings",
                        "properties": {
                            "additionalLatencyMilliseconds": 0,
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2
                        }
                    }
                ],
                "healthProbeSettings": [
                    {
                        "name": "frontendHealthProbe",
                        "properties": {
                            "intervalInSeconds": 30,
                            "path": "/",
                            "protocol": "Https"
                        }
                    },
                    {
                        "name": "backendHealthProbe",
                        "properties": {
                            "intervalInSeconds": 30,
                            "path": "/health",
                            "protocol": "Https"
                        }
                    }
                ],
                "backendPools": [
                    {
                        "name": "Frontend",
                        "properties": {
                            "copy": [
                                {
                                    "name": "backends",
                                    "count": "[length(parameters('frontendHosts'))]",
                                    "input": {
                                        "address": "[parameters('frontendHosts')[copyIndex('backends')]]",
                                        "httpPort": 80,
                                        "httpsPort": 443,
                                        "priority": 1,
                                        "weight": 50,
                                        "backendHostHeader": "[parameters('frontendHosts')[copyIndex('backends')]]"
                                    }
                                }
                            ],
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), 'frontendHealthProbe')]"
                            },
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), 'frontendLoadBalancerSettings')]"
                            }
                        }
                    },
                    {
                        "name": "Backend",
                        "properties": {
                            "copy": [
                                {
                                    "name": "backends",
                                    "count": "[length(parameters('backendHosts'))]",
                                    "input": {
                                        "address": "[parameters('backendHosts')[copyIndex('backends')]]",
                                        "httpPort": 80,
                                        "httpsPort": 443,
                                        "priority": 1,
                                        "weight": 50,
                                        "backendHostHeader": "[parameters('backendHosts')[copyIndex('backends')]]"
                                    }
                                }
                            ],
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), 'backendHealthProbe')]"
                            },
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), 'backendLoadBalancerSettings')]"
                            }
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "name": "publicEndpoint",
                        "properties": {
                            "hostName": "[parameters('frontDoorEndpoint')]",
                            "sessionAffinityEnabledState": "Disabled",
                            "sessionAffinityTtlSeconds": 0
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "name": "[parameters('cosmosdbAccountName')]",
            "apiVersion": "2019-08-01",
            "kind": "GlobalDocumentDB",
            "location": "[resourceGroup().location]",
            "tags": {
                "defaultExperience": "Core (SQL)"
            },
            "properties": {
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "[parameters('cosmosdbConsistencyLevel')]",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "copy": [
                    {
                        "name": "locations",
                        "count": "[length(parameters('cosmosdbRegions'))]",
                        "input": {
                            "locationName": "[parameters('cosmosdbRegions')[copyIndex('locations')]]",
                            "failoverPriority": "[copyIndex('locations')]",
                            "isZoneRedundant": false
                        }
                    }
                ],
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": true,
                "enableMultipleWriteLocations": true
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "name": "[concat(parameters('cosmosdbAccountName'), '/', variables('cosmosDatabaseName'))]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosdbAccountName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosDatabaseName')]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2019-12-12",
            "name": "[concat(parameters('cosmosdbAccountName'), '/', variables('cosmosDatabaseName'), '/', variables('cosmosContainerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosdbAccountName'), variables('cosmosDatabaseName'))]"
            ],
            "properties": {
                "resource": {
                    "id": "[variables('cosmosContainerName')]",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/UserId"
                        ],
                        "kind": "Hash"
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                },
                "options": {
                    "throughput": "[parameters('cosmosdbThroughput')]"
                }
            }
        }
    ]
}

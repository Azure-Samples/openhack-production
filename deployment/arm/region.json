{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "",
            "type": "string"
        },
        "backendAppName": {
            "defaultValue": "",
            "type": "string"
        },
        "appServicePlanName": {
            "defaultValue": "",
            "type": "string"
        },
        "apimName": {
            "defaultValue": "",
            "type": "string"
        },
        "storageActName": {
            "defaultValue": "",
            "type": "string"
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('appServicePlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 2
            },
            "kind": "app",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('backendAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            ],
            "kind": "api",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('backendAppName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('backendAppName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "clientAffinityEnabled": false,
                "httpsOnly": false
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('backendAppName'), '/web')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('backendAppName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "alwaysOn": true
            }
        },
        {
            "type": "Microsoft.Web/sites/slots",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('backendAppName'), '/staging')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('backendAppName'))]"
            ],
            "kind": "api",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('backendAppName'), '-staging.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('backendAppName'), '-staging.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "clientAffinityEnabled": false,
                "httpsOnly": false
            }
        },
        {
            "type": "Microsoft.Web/sites/slots/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('backendAppName'), '/staging/web')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', parameters('backendAppName'), 'staging')]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "alwaysOn": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2019-01-01",
            "name": "[parameters('apimName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Consumption",
                "capacity": 0
            },
            "properties": {
                "publisherEmail": "admin@contoso.com",
                "publisherName": "Contoso",
                "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/backends",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', parameters('backendAppName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "description": "[parameters('backendAppName')]",
                "url": "[concat('https://', parameters('backendAppName'), '.azurewebsites.net')]",
                "protocol": "http",
                "resourceId": "[concat('https://management.azure.com', subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', parameters('backendAppName'))]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/links-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Links API",
                "apiRevision": "1",
                "subscriptionRequired": false,
                "protocols": [
                    "https"
                ],
                "isCurrent": true,
                "path": "links"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/opengraph-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "OpenGraph API",
                "apiRevision": "1",
                "subscriptionRequired": false,
                "protocols": [
                    "https"
                ],
                "isCurrent": true,
                "path": "opengraph"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/health-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Health API",
                "apiRevision": "1",
                "subscriptionRequired": false,
                "protocols": [
                    "https"
                ],
                "isCurrent": true,
                "path": "health"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/health-api/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'health-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "[concat('<policies><inbound><base /><set-backend-service base-url=\"https://', parameters('backendAppName'),  '.azurewebsites.net/api/health\" /></inbound><backend><base /></backend><outbound><base /></outbound><on-error><base /></on-error>\r\n</policies>')]",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/links-api/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'links-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "[concat('<policies><inbound><base /><set-backend-service base-url=\"https://', parameters('backendAppName'),  '.azurewebsites.net/api/links\" /></inbound><backend><base /></backend><outbound><base /></outbound><on-error><base /></on-error>\r\n</policies>')]",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/opengraph-api/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'opengraph-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "[concat('<policies><inbound><base /><set-backend-service base-url=\"https://', parameters('backendAppName'),  '.azurewebsites.net/api/opengraph\" /></inbound><backend><base /></backend><outbound><base /></outbound><on-error><base /></on-error>\r\n</policies>')]",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/links-api/delete-api-links-vanityurl')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'links-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Delete",
                "description": "Delete a LinkBundle by Vanity Url.",
                "method": "DELETE",
                "urlTemplate": "/{vanityUrl}",
                "templateParameters": [
                    {
                        "name": "vanityUrl",
                        "type": "string",
                        "required": true,
                        "values": [
                        ]
                    }
                ],
                "responses": [
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/health-api/get-api-health')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'health-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "GET",
                "description": "Get API health",
                "method": "GET",
                "urlTemplate": "/",
                "templateParameters": [
                ],
                "responses": [
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/links-api/get-api-links')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'links-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "List All",
                "method": "GET",
                "urlTemplate": "/",
                "templateParameters": [
                ],
                "description": "List all the LinkBundles.",
                "responses": [
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/links-api/get-api-links-user-userid')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'links-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "List all by user",
                "method": "GET",
                "urlTemplate": "/user/{userId}",
                "templateParameters": [
                    {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "values": [
                        ]
                    }
                ],
                "description": "List all the LinkBundles for a user."
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/links-api/get-api-links-vanityurl')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'links-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "List by vanityUrl",
                "method": "GET",
                "urlTemplate": "/{vanityUrl}",
                "templateParameters": [
                    {
                        "name": "vanityUrl",
                        "type": "string",
                        "required": true,
                        "values": [
                        ]
                    }
                ],
                "description": "List a LinkBundles by Vanity Url.",
                "responses": [
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/links-api/patch-api-links-vanityurl')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'links-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Update a LinkBundle by a Vanity Url.",
                "method": "PATCH",
                "urlTemplate": "/{vanityUrl}",
                "templateParameters": [
                    {
                        "name": "vanityUrl",
                        "type": "string",
                        "required": true,
                        "values": [
                        ]
                    }
                ],
                "description": "Update a LinkBundle by a Vanity Url.",
                "responses": [
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/links-api/post-api-links')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'links-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Create",
                "description": "Creates a new link bundle",
                "method": "POST",
                "urlTemplate": "/",
                "templateParameters": [
                ],
                "responses": [
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/opengraph-api/post-api-opengraph')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'opengraph-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "Validate",
                "description": "Validates and lists details for one or more urls.",
                "method": "POST",
                "urlTemplate": "/",
                "templateParameters": [
                ],
                "responses": [
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageActName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2"
        }
    ]
}

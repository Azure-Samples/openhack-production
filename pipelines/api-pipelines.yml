trigger:
  branches:
    include:
      - master
  paths:
    include:
      - api/*
      - pipelines/api-pipelines.yml
  
pr:
  autoCancel: true   
  branches:
    include:
     - master
  paths:
    include:
      - api/*

pool:
  vmImage: "ubuntu-latest"
  
variables:
  azureSubscription: azure

stages:
  - stage: APICI
    displayName: API CI
    jobs:
      - job: APICI
        displayName: Build Test and Publish
        steps:
          - task: UseDotNet@2
            displayName: Dotnet version 3.1.100
            inputs:
              version: '3.1.100'

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: '**/*.csproj'
              arguments: '--configuration Release'

          - task: DotNetCoreCLI@2
            displayName: Test
            inputs:
              command: test
              projects: '**/*Tests/*.csproj'
              arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
  
          - task: DotNetCoreCLI@2
            displayName: Publish packages
            inputs:
              command: publish
              publishWebProjects: false
              arguments: '--configuration $(BuildConfiguration) --output $(System.ArtifactStagingDirectory)'
              zipAfterPublish: true
  
          - task: PublishBuildArtifacts@1
            displayName: Publish Artifacts
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
              artifactName: 'drop'
              publishLocation: 'Container'
             
  - stage: APICD
    displayName: Deploy API to App Service
    jobs:
      - job: RegionalMaxtrixDeployment
        displayName: Deploy API to Region
        strategy:
          matrix:
            westus2:
              region: westus2
            eastus:
              region: eastus
            centralus:
              region: centralus
        steps:    
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(Build.ArtifactStagingDirectory)'
             
          - task: AzureRMWebAppDeployment@4
            displayName: Deploy
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(azureSubscription)
              appType: 'apiApp'
              WebAppName: 'backend-prodoh1-urlist-dev-$(region)'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
   




   
  
  
  
  
              
  
  
  
  
  
                
           
  
  
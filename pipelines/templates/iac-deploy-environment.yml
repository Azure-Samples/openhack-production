parameters:
  subscriptionId: ""
  serviceConnection: ""
  businessUnit: "prodoh"
  appName: "urlist"
  environment: ""
  cosmosdbThroughput: 400
  appServicePlanSkuResourceType: "S1"
  appServicePlanSkuResourceCount: 1
  regions: []

jobs:
  - template: deployment-gate.yml
    parameters:
      environment: ${{ parameters.environment }}
      
  - job: setup
    displayName: Initialize
    variables:
      - name: regionList
        value: ${{ join(',', parameters.regions) }}
    steps:
      - task: Bash@3
        name: createMatrixJson
        displayName: Create Matrix
        inputs:
          targetType: inline
          script: |
            source ./deployment/arm/utils.sh
            matrix=$(toRegionMatrix $(regionList))
            echo "##vso[task.setVariable variable=matrix;isOutput=true]$matrix"

  - job: DeployRegionalResourceGroup
    displayName: "Deploy Region:"
    variables:
      - name: regionList
        value: ${{ join(',', parameters.regions) }}
    dependsOn: setup
    strategy:
      matrix: $[ dependencies.setup.outputs['createMatrixJson.matrix'] ]
    steps:
      - task: AzureCLI@2
        displayName: Deploy Region ($(region))
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: "bash"
          scriptLocation: "scriptPath"
          scriptPath: "./deployment/arm/deploy-region.sh"
          arguments: "-s ${{ parameters.subscriptionId }} \
          -u ${{ parameters.businessUnit }} \
          -a ${{ parameters.appName }} \
          -e ${{ parameters.environment }} \
          -r $(region) \
          -p ${{ parameters.appServicePlanSkuResourceCount }} \
          -t ${{ parameters.appServicePlanSkuResourceType }}"

  - job: DeployGlobalResourceGroup
    displayName: Deploy Global Resources
    dependsOn: DeployRegionalResourceGroup
    variables:
      - name: regionList
        value: ${{ join(',', parameters.regions) }}
    steps:
      - task: AzureCLI@2
        displayName: Deploy ARM Template
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: "bash"
          scriptLocation: "scriptPath"
          scriptPath: "./deployment/arm/deploy-global.sh"
          arguments: "-s ${{ parameters.subscriptionId}} \
          -u ${{ parameters.businessUnit }} \
          -a ${{ parameters.appName }} \
          -e ${{ parameters.environment }} \
          -r $(regionList) \
          -c ${{ parameters.cosmosdbThroughput }}"
